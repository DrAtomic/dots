* startup
Use-package
#+BEGIN_SRC emacs-lisp
  (package-initialize)
  (require 'package)
  (add-to-list 'package-archives
	       '("melpa" ."https://melpa.org/packages/") t)
  (unless (package-installed-p 'use-package)
    (package-refresh-contents)
    (package-install 'use-package))
  (add-to-list 'default-frame-alist '(fullscreen . maximized))
#+END_SRC
* loadpath
#+begin_src emacs-lisp
  (add-to-list 'load-path "/usr/local/share/emacs/site-lisp")
#+end_src
* orgmode
#+begin_src emacs-lisp
  (use-package org
    :ensure t)
#+end_src
** pdf
#+begin_src emacs-lisp
  (push '("\\.pdf\\'" . emacs) org-file-apps)
#+end_src
** bullets
#+BEGIN_SRC emacs-lisp
  (use-package org-bullets
    :ensure t
    :init
    (setq org-bullets-bullet-list
	  '( "◉" "●" "○" "•"))
    :config
    (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1))))
#+END_SRC
** org-roam
#+begin_src emacs-lisp
  (use-package org-roam
    :ensure t
    :custom
    (org-roam-directory  "~/Notes")
    (org-roam-complete-everywhere t)
    :bind
    (("C-c n l" . org-roam-buffer-toggle)
     ("C-c n f" . org-roam-node-find)
     ("C-c n i" . org-roam-node-insert)
     ("C-c n d t" . org-roam-dailies-goto-today)
     ("C-c n d m" . org-roam-dailies-goto-tomorrow)
     ("C-c n d d" . org-roam-dailies-goto-date)
     :map org-mode-map
     ("C-M-i"   . completion-at-point))
    :config
    (org-roam-setup))
#+end_src
* theme
#+begin_src emacs-lisp
  (use-package dracula-theme
    :ensure t
    :config
    (load-theme 'dracula t))
  (set-face-attribute 'default nil :font "DejaVu Sans Mono" :height 190)
#+end_src
* projectile
#+begin_src emacs-lisp
  (use-package projectile
    :ensure t
    :config
    (define-key projectile-mode-map (kbd "C-c p") 'projectile-command-map))
#+end_src

* dashboard
#+BEGIN_SRC emacs-lisp
  (use-package dashboard
    :ensure t
    :config
    (dashboard-setup-startup-hook)
    (setq dashboard-startup-banner 'logo)
    (setq dashboard-center-content t)
    (setq dashboard-items '((recents . 5)
			    (projects . 5))))
#+END_SRC
* tmp
set autosave fiels to .tmp folder
#+BEGIN_SRC emacs-lisp
  (setq temporary-file-directory "~/.tmp/")
  (setq backup-directory-alist
	`((".*" . ,temporary-file-directory)))
  (setq auto-save-file-name-transforms
	`((".*" ,temporary-file-directory t)))
#+END_SRC
* pretty emacs
remove ugly things and make things pretty
#+BEGIN_SRC emacs-lisp
  (tool-bar-mode -1)
  (menu-bar-mode -1)
  (scroll-bar-mode -1)
  (setq inhibit-startup-message t)
  (setq ring-bell-function 'ignore)
  (setq scroll-conservatively 100)
#+END_SRC
